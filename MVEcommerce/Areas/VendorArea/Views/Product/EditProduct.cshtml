@using MVEcommerce.Models.ViewModels.VendorProduct
@model VendorAddProductVM
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    Layout = "_VendorPageLayout";
}

<div class="content container-fluid">
    <div class="row align-items-center">
        <div class="col-sm mb-2 mb-sm-0">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb breadcrumb-no-gutter">
                    <li class="breadcrumb-item"><a class="breadcrumb-link" href="@Url.Action("Index", "Product")">Products</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Add Product</li>
                </ol>
            </nav>

            <h1 class="page-header-title">Add Product</h1>

            <div class="mt-2">
                <a class="text-body me-3" href="javascript:;">
                    <i class="bi-clipboard me-1"></i> Duplicate
                </a>
                <a class="text-body" href="javascript:;">
                    <i class="bi-eye me-1"></i> Preview
                </a>
            </div>
        </div>
        <!-- End Col -->
    </div>
    <!-- End Row -->

    <form asp-action="AddProduct" method="post" enctype="multipart/form-data">
        <div class="row">
            <div class="col-lg-8 mb-3 mb-lg-0">
                <!-- Card -->
                <div class="card mb-3 mb-lg-5">
                    <!-- Header -->
                    <div class="card-header">
                        <h4 class="card-header-title">Product information</h4>
                    </div>
                    <div asp-validation-summary="ModelOnly" style="color: #e22525;" role="alert"></div>
                    <!-- End Header -->
                    <!-- Body -->
                    <div class="card-body">
                        <!-- Form -->
                        <div class="mb-4">
                            <label asp-for="Product.Name" class="form-label">Name <i class="bi-question-circle text-body ms-1" data-bs-toggle="tooltip" data-bs-placement="top" title="Products are the goods or services you sell."></i></label>
                            <input type="text" class="form-control" asp-for="Product.Name" placeholder="Shirt, t-shirts, etc." aria-label="Shirt, t-shirts, etc.">
                        </div>
                        <!-- End Form -->

                        <div class="row">
                            <div class="col-sm-6">
                                <!-- Form -->
                                <div class="mb-4">
                                    <label asp-for="Product.SKU" class="form-label">SKU</label>
                                    <input type="text" class="form-control" asp-for="Product.SKU" placeholder="eg. 348121032" aria-label="eg. 348121032">
                                </div>
                                <!-- End Form -->
                            </div>
                            <!-- End Col -->

                            <div class="col-sm-6">
                                <!-- Form -->
                                <div class="mb-4">
                                    <label for="categoryLabel" class="form-label">Category</label>
                                    <!-- Select -->
                                    <div class="tom-select-custom">
                                        <select asp-for="Product.CategoryId" asp-items="@Model.Categories" class="js-select form-select" id="categoryLabel" data-hs-tom-select-options='{
                                        "searchInDropdown": false,
                                        "hideSearch": true,
                                        "placeholder": "Select category"
                                      }'>
                                        </select>
                                    </div>
                                    <!-- End Select -->
                                </div>
                                <!-- Form -->
                            </div>
                            <!-- End Col -->
                        </div>
                        <!-- End Row -->

                        <div class="row">
                            <textarea id="editor" class="form-control" asp-for="Product.Description"></textarea>
                        </div>

                        <!-- Add product variants and options here -->
                        <div id="variants">
                            <h4>Variants</h4>
                            <button type="button" class="btn btn-secondary mb-3" onclick="showVariantInput()">Add Variant</button>
                            <div id="variant-list" style="display: none;">
                                <div class="variant-item mb-4">
                                    <div class="mb-4">
                                        <label class="form-label">Variant Name</label>
                                        <input type="text" class="form-control" asp-for="ProductVariant.Name" />
                                    </div>
                                    <div class="mb-4">
                                        <label class="form-label">Options</label>
                                        <div id="option-list">
                                            @for (int j = 0; j < Model.ProductVariantOptions.Count; j++)
                                            {
                                                var option = Model.ProductVariantOptions[j];
                                                <div class="option-item row mb-3">
                                                    <input type="hidden" asp-for="ProductVariantOptions[@j].VariantId" value="@Model.ProductVariant.VariantId" />
                                                    <div class="col-md-2 mb-2 mb-md-0">
                                                        <input type="text" class="form-control" asp-for="ProductVariantOptions[@j].Value" placeholder="Option Value" />
                                                    </div>
                                                    <div class="col-md-2 mb-2 mb-md-0">
                                                        <input type="text" class="form-control" asp-for="ProductVariantOptions[@j].Price" placeholder="Option Price" />
                                                    </div>
                                                    <div class="col-md-2 mb-2 mb-md-0">
                                                        <input type="text" class="form-control" asp-for="ProductVariantOptions[@j].Stock" placeholder="Option Stock" />
                                                    </div>
                                                    <div class="col-md-2 mb-2 mb-md-0">
                                                        <input type="text" class="form-control" asp-for="ProductVariantOptions[@j].SKU" placeholder="Option SKU" />
                                                    </div>
                                                    <div class="col-md-2 mb-2 mb-md-0">
                                                        <input type="text" class="form-control" asp-for="ProductVariantOptions[@j].Sale" placeholder="Option Sale" />
                                                    </div>
                                                    <div class="col-md-2 text-end">
                                                        <button type="button" class="btn btn-danger" onclick="removeOption(this)">Remove</button>
                                                    </div>
                                                </div>

                                                <div class="row mb-3">
                                                    <div class="col-12">
                                                        <div class="mb-4">
                                                            <label class="form-label">Option Images</label>
                                                            <div id="optionImagesPreview_@j" class="d-flex flex-wrap gap-2 mb-2">
                                                                <!-- Image previews will be added here -->
                                                            </div>
                                                            <input type="file" 
                                                                class="form-control" 
                                                                multiple 
                                                                accept="image/*"
                                                                onchange="previewOptionImages(event, @j)" 
                                                                name="optionImages[@j]" />
                                                        </div>

                                                    </div>
                                                </div>
                                            }
                                        </div>
                                        <button type="button" class="btn btn-secondary" onclick="addOption()">Add Option</button>
                                    </div>
                                    <hr />
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Body -->
                </div>
                <!-- End Card -->
            </div>
            <!-- End Col -->

            <div class="col-lg-4">
                <!-- Card -->
                <div class="card mb-3 mb-lg-5">
                    <!-- Header -->
                    <div class="card-header">
                        <h4 class="card-header-title">Pricing</h4>
                    </div>
                    <!-- End Header -->
                    <!-- Body -->
                    <div class="card-body">
                        <!-- Form -->
                        <div class="mb-4">
                            <label asp-for="Product.Price" class="form-label">Price</label>
                            <input type="text" class="form-control" asp-for="Product.Price" placeholder="0.00" aria-label="0.00">
                        </div>
                        <!-- End Form -->

                        <!-- Form -->
                        <div class="mb-4">
                            <label asp-for="Product.Sale" class="form-label">Sale</label>
                            <input type="text" class="form-control" asp-for="Product.Sale" placeholder="0.00" aria-label="0.00" value="0.0">
                        </div>
                        <!-- End Form -->
                    </div>
                    <!-- Body -->
                </div>

                <!-- Product Images Section -->
                <div class="card mb-3 mb-lg-5">
                    <div class="card-header">
                        <h4 class="card-header-title">Product Images</h4>
                    </div>
                    <div class="card-body">
                        <div class="mb-4">
                            <label class="form-label">Main Image</label>
                            <div class="main-image-preview" style="margin-bottom: 10px;">
                                <div id="mainImageContainer" style="display: none; position: relative; width: 200px;">
                                    <img id="mainImagePreview" src="#" alt="Main image preview" style="width: 100%; height: auto;"/>
                                    <button type="button" class="btn-close" style="position: absolute; top: 5px; right: 5px;" 
                                            onclick="removeMainImage()"></button>
                                </div>
                            </div>
                            <input type="file" id="mainImage" name="mainImage" class="form-control" accept="image/*" 
                                onchange="previewMainImage(event)"/>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">Additional Images</label>
                            <div id="additionalImagesPreview" class="d-flex flex-wrap gap-2 mb-2"></div>
                            <input type="file" id="additionalImages" name="additionalImages" multiple class="form-control" 
                                accept="image/*" onchange="previewAdditionalImages(event)"/>
                        </div>
                    </div>
                </div>
                <!-- End Card -->
            </div>
            <!-- End Col -->

            <div class="col-lg-12">
                <button type="submit" class="btn btn-primary">Save</button>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        function showVariantInput() {
            document.getElementById('variant-list').style.display = 'block';
        }

        function addOption() {
            var optionIndex = document.querySelectorAll('#option-list .option-item').length;
            var optionHtml = `
                <div class="option-item row mb-3">
                    <input type="hidden" name="ProductVariantOptions[${optionIndex}].VariantId" value="@Model.ProductVariant.VariantId" />
                    <div class="col-md-2 mb-2 mb-md-0">
                        <input type="text" class="form-control" name="ProductVariantOptions[${optionIndex}].Value" placeholder="Option Value" />
                    </div>
                    <div class="col-md-2 mb-2 mb-md-0">
                        <input type="text" class="form-control" name="ProductVariantOptions[${optionIndex}].Price" placeholder="Option Price" />
                    </div>
                    <div class="col-md-2 mb-2 mb-md-0">
                        <input type="text" class="form-control" name="ProductVariantOptions[${optionIndex}].Stock" placeholder="Option Stock" />
                    </div>
                    <div class="col-md-2 mb-2 mb-md-0">
                        <input type="text" class="form-control" name="ProductVariantOptions[${optionIndex}].SKU" placeholder="Option SKU" />
                    </div>
                    <div class="col-md-2 mb-2 mb-md-0">
                        <input type="text" class="form-control" name="ProductVariantOptions[${optionIndex}].Sale" placeholder="Option Sale" />
                    </div>
                    <div class="col-md-2 text-end">
                        <button type="button" class="btn btn-danger" onclick="removeOption(this)">Remove</button>
                    </div>
                    <div class="col-12">
                        <div class="mb-4">
                            <label class="form-label">Option Images</label>
                            <div id="optionImagesPreview_${optionIndex}" class="d-flex flex-wrap gap-2 mb-2">
                            </div>
                            <input type="file" 
                                class="form-control" 
                                multiple 
                                accept="image/*"
                                onchange="previewOptionImages(event, ${optionIndex})" 
                                name="optionImages[${optionIndex}]" />
                        </div>
                    </div>
                </div>`;
            document.getElementById('option-list').insertAdjacentHTML('beforeend', optionHtml);
        }

        function removeOption(button) {
            button.closest('.option-item').remove();
        }
    </script>
}
    <script>
        function showVariantInput() {
            document.getElementById('variant-list').style.display = 'block';
        }

        function addOption() {
            var optionIndex = document.querySelectorAll('#option-list .option-item').length;
            var optionHtml = `
                <div class="option-item row mb-3">
                    <input type="hidden" name="ProductVariantOptions[${optionIndex}].VariantId" value="@Model.ProductVariant.VariantId" />
                    <div class="col-md-2 mb-2 mb-md-0">
                        <input type="text" class="form-control" name="ProductVariantOptions[${optionIndex}].Value" placeholder="Option Value" />
                    </div>
                    <div class="col-md-2 mb-2 mb-md-0">
                        <input type="text" class="form-control" name="ProductVariantOptions[${optionIndex}].Price" placeholder="Option Price" />
                    </div>
                    <div class="col-md-2 mb-2 mb-md-0">
                        <input type="text" class="form-control" name="ProductVariantOptions[${optionIndex}].Stock" placeholder="Option Stock" />
                    </div>
                    <div class="col-md-2 mb-2 mb-md-0">
                        <input type="text" class="form-control" name="ProductVariantOptions[${optionIndex}].SKU" placeholder="Option SKU" />
                    </div>
                    <div class="col-md-2 mb-2 mb-md-0">
                        <input type="text" class="form-control" name="ProductVariantOptions[${optionIndex}].Sale" placeholder="Option Sale" />
                    </div>
                    <div class="col-md-2 text-end">
                        <button type="button" class="btn btn-danger" onclick="removeOption(this)">Remove</button>
                    </div>
                </div>`;
            document.getElementById('option-list').insertAdjacentHTML('beforeend', optionHtml);
        }

        function removeOption(button) {
            button.closest('.option-item').remove();
        }
    </script>

    <script>
        tinymce.init({
            selector: '#editor',

            plugins: [
                // Core editing features
                'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'image', 'link', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount',
                // Your account includes a free trial of TinyMCE premium features
                // Try the most popular premium features until Nov 28, 2024:
                'checklist', 'mediaembed', 'casechange', 'export', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown',
                // Early access to document converters
                'importword', 'exportword', 'exportpdf'
            ],
            toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
            tinycomments_mode: 'embedded',
            tinycomments_author: 'Author name',
            mergetags_list: [
                { value: 'First.Name', title: 'First Name' },
                { value: 'Email', title: 'Email' },
            ],
            ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
            exportpdf_converter_options: { 'format': 'Letter', 'margin_top': '1in', 'margin_right': '1in', 'margin_bottom': '1in', 'margin_left': '1in' },
            exportword_converter_options: { 'document': { 'size': 'Letter' } },
            importword_converter_options: { 'formatting': { 'styles': 'inline', 'resets': 'inline', 'defaults': 'inline', } },

            // enable title field in the Image dialog
            image_title: true,
            // enable automatic uploads of images represented by blob or data URIs
            automatic_uploads: true,
            // add custom filepicker only to Image dialog
            file_picker_types: 'image',
            file_picker_callback: function (cb, value, meta) {
                var input = document.createElement('input');
                input.setAttribute('type', 'file');
                input.setAttribute('accept', 'image/*');

                input.onchange = function () {
                    var file = this.files[0];
                    var formData = new FormData();
                    formData.append('file', file);

                    // Thay đổi URL này thành URL của API upload file của bạn
                    var uploadUrl = '/api/upload';

                    fetch(uploadUrl, {
                        method: 'POST',
                        body: formData
                    })
                    .then(response => response.json())
                    .then(data => {
                        // Giả sử API trả về URL của file đã upload
                        var fileUrl = data.url;
                        cb(fileUrl, { title: file.name });
                    })
                    .catch(error => {
                        console.error('Error uploading file:', error);
                    });
                };

                input.click();
            },

            setup: function (editor) {
                editor.on('remove', function (e) {
                    var src = e.target.src;
                    if (src) {
                        // Thay đổi URL này thành URL của API xóa file của bạn
                        var deleteUrl = '/api/delete';

                        fetch(deleteUrl, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ url: src })
                        })
                        .then(response => response.json())
                        .then(data => {
                            console.log('File deleted:', data);
                        })
                        .catch(error => {
                            console.error('Error deleting file:', error);
                        });
                    }
                });
            }
        });
    </script>

    @* Image *@
    <script>
        function previewMainImage(event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    document.getElementById('mainImageContainer').style.display = 'block';
                    document.getElementById('mainImagePreview').src = e.target.result;
                }
                reader.readAsDataURL(file);
            }
        }

        function removeMainImage() {
            document.getElementById('mainImage').value = '';
            document.getElementById('mainImageContainer').style.display = 'none';
        }

        function previewOptionImages(event, index) {
            const files = event.target.files;
            const previewContainer = document.getElementById(`optionImagesPreview_${index}`);
            previewContainer.innerHTML = '';

            // Create hidden input for tracking option index
            const indexInput = document.createElement('input');
            indexInput.type = 'hidden';
            indexInput.name = `optionImageIndexes`;
            indexInput.value = index;
            previewContainer.appendChild(indexInput);

            Array.from(files).forEach(file => {
                const reader = new FileReader();
                reader.onload = function(e) {
                    const wrapper = document.createElement('div');
                    wrapper.style.position = 'relative';
                    wrapper.style.width = '100px';
                    wrapper.style.height = '100px';

                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.style.width = '100%';
                    img.style.height = '100%';
                    img.style.objectFit = 'cover';
                    img.style.borderRadius = '5px';

                    const removeBtn = document.createElement('button');
                    removeBtn.innerHTML = '×';
                    removeBtn.className = 'btn btn-sm btn-danger position-absolute';
                    removeBtn.style.top = '5px';
                    removeBtn.style.right = '5px';
                    removeBtn.style.padding = '0 6px';
                    removeBtn.onclick = () => wrapper.remove();

                    wrapper.appendChild(img);
                    wrapper.appendChild(removeBtn);
                    previewContainer.appendChild(wrapper);
                }
                reader.readAsDataURL(file);
            });
        }

        function previewOptionImages(event, optionIndex) {
            const container = document.querySelector(`.option-images-preview-${optionIndex}`);
            handleImagePreviews(event.target.files, container);
        }

        function handleImagePreviews(files, container) {
            for (const file of files) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    const wrapper = document.createElement('div');
                    wrapper.style.position = 'relative';
                    wrapper.style.width = '100px';
                    wrapper.style.marginRight = '10px';

                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.style.width = '100%';
                    img.style.height = 'auto';

                    const removeBtn = document.createElement('button');
                    removeBtn.className = 'btn-close';
                    removeBtn.style.position = 'absolute';
                    removeBtn.style.top = '5px';
                    removeBtn.style.right = '5px';
                    removeBtn.onclick = () => wrapper.remove();

                    wrapper.appendChild(img);
                    wrapper.appendChild(removeBtn);
                    container.appendChild(wrapper);
                }
                reader.readAsDataURL(file);
            }
        }

        function previewOptionImages(event, index) {
            const files = event.target.files;
            const previewContainer = document.getElementById(`optionImagesPreview_${index}`);
            previewContainer.innerHTML = '';

            Array.from(files).forEach(file => {
                const reader = new FileReader();
                reader.onload = function(e) {
                    const wrapper = document.createElement('div');
                    wrapper.style.position = 'relative';
                    wrapper.style.width = '100px';
                    wrapper.style.height = '100px';

                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.style.width = '100%';
                    img.style.height = '100%';
                    img.style.objectFit = 'cover';
                    img.style.borderRadius = '5px';

                    const removeBtn = document.createElement('button');
                    removeBtn.innerHTML = '×';
                    removeBtn.className = 'btn btn-sm btn-danger position-absolute';
                    removeBtn.style.top = '5px';
                    removeBtn.style.right = '5px';
                    removeBtn.style.padding = '0 6px';
                    removeBtn.onclick = () => wrapper.remove();

                    wrapper.appendChild(img);
                    wrapper.appendChild(removeBtn);
                    previewContainer.appendChild(wrapper);
                }
                reader.readAsDataURL(file);
            });
        }
    </script>
}